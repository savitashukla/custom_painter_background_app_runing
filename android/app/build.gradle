plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.onpassive.owomen"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.onpassive.owomen"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }



    signingConfigs {
        liveConfig {
            Properties keystore_properties = new Properties()

            keystore_properties.load(project.rootProject.file('key_file/keystore.properties').newDataInputStream())
// to load properties
            keyAlias keystore_properties.getProperty("KEY_ALIAS")
            keyPassword keystore_properties.getProperty("KEY_PASSWORD")
            storeFile new File(rootDir, keystore_properties.getProperty("STORE_PATH"))
            storePassword keystore_properties.getProperty("STORE_PASSWORD")
        }
    }


    buildTypes {
        releaseStaging {
            shrinkResources false
            minifyEnabled false
            matchingFallbacks = ['release']
            signingConfig signingConfigs.liveConfig
        }


        release {
            //    minifyEnabled enableProguardInReleaseBuilds
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.liveConfig

        }
    }
  /*  buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }*/
}

flutter {
    source '../..'
}

dependencies {}
